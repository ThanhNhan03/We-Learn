// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WeLearnAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241008041728_AddFaqTable")]
    partial class AddFaqTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210"),
                            ConcurrencyStamp = "49f4ba6c-9123-444b-8e44-063342f55684",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514"),
                            ConcurrencyStamp = "0c6b4d64-2431-420d-8568-67b7a4d2d833",
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            RoleId = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210")
                        },
                        new
                        {
                            UserId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("9df864a0-89fd-4ef2-9db7-8f0eca88b715"),
                            RoleId = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210")
                        },
                        new
                        {
                            UserId = new Guid("75c84fed-881c-4b05-8a7c-293ee0d5ca1a"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("0a20099b-1efb-4078-96bc-2b0f91d12636"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("3b5b4d96-b5fb-4286-a210-5a396160a4a9"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("f4c13c04-9473-4080-99f9-91c535d40268"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("3866db57-8ec1-49b4-846d-9c74af8d00a5"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("1783e535-b8f1-4819-8986-9f90ee126504"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("d0fbe324-efff-4c70-9a68-2323d2e28404"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("558c71b4-8510-45b8-a873-80f1227451b1"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("e4c5a420-944e-4e60-a278-f48dc059a7b8"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("62237c2b-729b-453f-8518-26a97578a0fa"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RememberToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6063a043-e497-4c9e-9a87-d9a3a646bee7"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8efa1872-21ca-47e8-8195-e1e747c29fa1",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7144),
                            Email = "user1@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName1",
                            Gender = (byte)1,
                            LastName = "UserLastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_1",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7135),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7145),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("ea89e2f7-224a-44f2-a1bb-e8b6461b5c08"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0fdf77e0-9c4e-45e3-b571-3dbf9051f24c",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7221),
                            Email = "user2@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName2",
                            Gender = (byte)1,
                            LastName = "UserLastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_2",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7220),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7221),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("54401a8e-2c6c-42a6-83ea-2a893be654c2"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4be72342-853f-435d-9933-63c78b910f9f",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7320),
                            Email = "user3@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName3",
                            Gender = (byte)1,
                            LastName = "UserLastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_3",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7319),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7321),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("9bc72c30-441e-46b7-8eac-d8d61d29d80f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "513a2b64-4ef3-468d-bae5-38fd51431b9f",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7400),
                            Email = "user4@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName4",
                            Gender = (byte)1,
                            LastName = "UserLastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_4",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7399),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7400),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("bc3c99eb-9244-4e09-936c-65c11059ca1d"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4e723566-94a9-44c7-91d6-b3e672097a37",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7474),
                            Email = "user5@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName5",
                            Gender = (byte)1,
                            LastName = "UserLastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_5",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7474),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7475),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("e1a6f1b5-2c6b-44df-86d3-79277d57ebc4"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "eb39cc30-d0b7-4a47-9964-9a1914218548",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7552),
                            Email = "user6@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName6",
                            Gender = (byte)1,
                            LastName = "UserLastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_6",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7551),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7552),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("add4edea-beda-4a5f-a16d-d6eb8fe46025"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "29442d0a-d0fb-4534-815a-48bf6f1b0735",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7619),
                            Email = "user7@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName7",
                            Gender = (byte)1,
                            LastName = "UserLastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_7",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7618),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7619),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("cfb08966-9ace-4896-afcf-48679c023566"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fc5e918b-97ee-41ee-96ea-eb83af3e42f5",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7687),
                            Email = "user8@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName8",
                            Gender = (byte)1,
                            LastName = "UserLastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_8",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7686),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7687),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("09fc9263-49ce-4735-b492-c1d9e153b1ee"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bce99b55-edbd-4445-b774-3754aba3b317",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7952),
                            Email = "user9@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName9",
                            Gender = (byte)1,
                            LastName = "UserLastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_9",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7951),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7953),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("0f541998-4b6d-46d2-98b5-007e58a2a1ed"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "75bfb9dc-99ae-4d88-8bf9-eebfdcb68d93",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8030),
                            Email = "user10@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName10",
                            Gender = (byte)1,
                            LastName = "UserLastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_10",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8029),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8031),
                            UserName = "user10"
                        },
                        new
                        {
                            Id = new Guid("e4afeb22-da63-4500-ba14-21d5ae632241"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3753f144-35a0-439c-ad49-16b3ce8090e8",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8099),
                            Email = "user11@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName11",
                            Gender = (byte)1,
                            LastName = "UserLastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_11",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8098),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8099),
                            UserName = "user11"
                        },
                        new
                        {
                            Id = new Guid("0557590d-3ece-465b-8d28-e8e1139dacf2"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8fba55b5-7fb6-431c-ae82-52a24a17e05e",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8168),
                            Email = "user12@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName12",
                            Gender = (byte)1,
                            LastName = "UserLastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_12",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8167),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8169),
                            UserName = "user12"
                        },
                        new
                        {
                            Id = new Guid("a0b374a4-65e8-4f3f-bdc3-1360bfd1efaf"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fbf569a2-43e0-4a77-9bb3-7f20931c6244",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8246),
                            Email = "user13@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName13",
                            Gender = (byte)1,
                            LastName = "UserLastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_13",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8245),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8247),
                            UserName = "user13"
                        },
                        new
                        {
                            Id = new Guid("4a02f9e3-9916-45ed-aba6-fe244e7b7e19"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1b2f6f8d-9575-489d-8e1c-9ed3f47354f0",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8311),
                            Email = "user14@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName14",
                            Gender = (byte)1,
                            LastName = "UserLastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_14",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8310),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8311),
                            UserName = "user14"
                        },
                        new
                        {
                            Id = new Guid("b0eeec38-30e6-4c94-bd2f-f1fa4722c534"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3b7e833b-1d12-4a92-b996-2262d1eb07e5",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8381),
                            Email = "user15@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName15",
                            Gender = (byte)1,
                            LastName = "UserLastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_15",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8380),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8382),
                            UserName = "user15"
                        },
                        new
                        {
                            Id = new Guid("3792a79f-a280-4a25-a279-056e4191ab81"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a7464e17-f61c-4ff6-acbd-f0260a9e4c66",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8452),
                            Email = "user16@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName16",
                            Gender = (byte)1,
                            LastName = "UserLastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_16",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8451),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8453),
                            UserName = "user16"
                        },
                        new
                        {
                            Id = new Guid("cddd6b2a-b10c-4421-af40-aeba79364fc3"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e4723d98-78f2-4c25-8e33-cb2aa75bfc3c",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8517),
                            Email = "user17@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName17",
                            Gender = (byte)1,
                            LastName = "UserLastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_17",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8516),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8518),
                            UserName = "user17"
                        },
                        new
                        {
                            Id = new Guid("46bf95f4-4b70-4aec-bb75-18f050c4f557"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6760bfbe-9fa6-482f-8cb3-4908bc95ff3a",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8712),
                            Email = "user18@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName18",
                            Gender = (byte)1,
                            LastName = "UserLastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_18",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8711),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(8713),
                            UserName = "user18"
                        },
                        new
                        {
                            Id = new Guid("07a1f555-ee10-4f4c-a75f-55df23757012"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4b8c1a9e-de14-4ac8-88c5-351849d292e0",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9062),
                            Email = "user19@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName19",
                            Gender = (byte)1,
                            LastName = "UserLastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_19",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9061),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9063),
                            UserName = "user19"
                        },
                        new
                        {
                            Id = new Guid("9c4a095a-2509-4fc3-ac52-1b76e38b3320"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dc55a8d3-6a7b-4717-925a-3f73e28d3596",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9147),
                            Email = "user20@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName20",
                            Gender = (byte)1,
                            LastName = "UserLastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_20",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9146),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9147),
                            UserName = "user20"
                        },
                        new
                        {
                            Id = new Guid("71b0c668-654d-4832-a878-f08944e4838d"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d1ca9818-6b69-4d8c-b5eb-c5548cf1da60",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9219),
                            Email = "user21@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName21",
                            Gender = (byte)1,
                            LastName = "UserLastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER21@EXAMPLE.COM",
                            NormalizedUserName = "USER21",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_21",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9218),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9220),
                            UserName = "user21"
                        },
                        new
                        {
                            Id = new Guid("e03a13a3-f06b-408c-a70b-2d7ea6153e08"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d222df0c-776b-48dd-a4f4-af3481eea967",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9297),
                            Email = "user22@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName22",
                            Gender = (byte)1,
                            LastName = "UserLastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER22@EXAMPLE.COM",
                            NormalizedUserName = "USER22",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_22",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9296),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9297),
                            UserName = "user22"
                        },
                        new
                        {
                            Id = new Guid("980156aa-7e34-4f87-b86f-1b76985f31f9"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4b0a3039-4c4e-45cd-b9a0-3a879ccfbccf",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9365),
                            Email = "user23@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName23",
                            Gender = (byte)1,
                            LastName = "UserLastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER23@EXAMPLE.COM",
                            NormalizedUserName = "USER23",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_23",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9364),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9366),
                            UserName = "user23"
                        },
                        new
                        {
                            Id = new Guid("a3ae6d0e-b787-4423-8c53-eb06a741e54f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "60f5788a-3257-4a3d-9221-dff6163dd98c",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9428),
                            Email = "user24@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName24",
                            Gender = (byte)1,
                            LastName = "UserLastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER24@EXAMPLE.COM",
                            NormalizedUserName = "USER24",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_24",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9428),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9429),
                            UserName = "user24"
                        },
                        new
                        {
                            Id = new Guid("8a881069-5b0c-48b1-92f5-c95d2a550acd"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "58539623-0e03-4122-925c-00a0cd7f8d8e",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9489),
                            Email = "user25@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName25",
                            Gender = (byte)1,
                            LastName = "UserLastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER25@EXAMPLE.COM",
                            NormalizedUserName = "USER25",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_25",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9488),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9490),
                            UserName = "user25"
                        },
                        new
                        {
                            Id = new Guid("32858fbe-81e5-4a20-a177-8cd520fae065"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "278bf457-d14b-4690-88bd-96ec2e8a1916",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9548),
                            Email = "user26@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName26",
                            Gender = (byte)1,
                            LastName = "UserLastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER26@EXAMPLE.COM",
                            NormalizedUserName = "USER26",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_26",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9548),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9549),
                            UserName = "user26"
                        },
                        new
                        {
                            Id = new Guid("bee317e5-fbee-4303-b14a-cc70272bfd40"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3cc50435-96e5-4f6d-9b72-3c0d9d53813b",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9616),
                            Email = "user27@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName27",
                            Gender = (byte)1,
                            LastName = "UserLastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER27@EXAMPLE.COM",
                            NormalizedUserName = "USER27",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_27",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9615),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9618),
                            UserName = "user27"
                        },
                        new
                        {
                            Id = new Guid("221e090f-69f2-4fc5-8458-62cc3e371cc1"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a74f1c22-979b-4c22-bfc2-0973bced5e1c",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9677),
                            Email = "user28@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName28",
                            Gender = (byte)1,
                            LastName = "UserLastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER28@EXAMPLE.COM",
                            NormalizedUserName = "USER28",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_28",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9676),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9678),
                            UserName = "user28"
                        },
                        new
                        {
                            Id = new Guid("098ccd75-ab19-4417-834d-ba26a65eef9b"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "337a9cae-4a61-48b8-9fbb-25a872e2a14f",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9740),
                            Email = "user29@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName29",
                            Gender = (byte)1,
                            LastName = "UserLastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER29@EXAMPLE.COM",
                            NormalizedUserName = "USER29",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_29",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9739),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9740),
                            UserName = "user29"
                        },
                        new
                        {
                            Id = new Guid("7acd7894-4bfd-47fe-9cba-75328d5cbc62"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6659acb6-fcff-4228-aca7-30289d022308",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9814),
                            Email = "user30@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName30",
                            Gender = (byte)1,
                            LastName = "UserLastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER30@EXAMPLE.COM",
                            NormalizedUserName = "USER30",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_30",
                            RefreshTokenExpiryTime = new DateTime(2024, 11, 7, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9802),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(9815),
                            UserName = "user30"
                        });
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e015efd6-69bc-41ad-b461-b09aca02b9e8",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 622, DateTimeKind.Local).AddTicks(3021),
                            Email = "admin1@example.com",
                            EmailConfirmed = true,
                            FirstName = "FirstAdmin",
                            Gender = (byte)1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN1@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN1",
                            PasswordHash = "AQAAAAIAAYagAAAAEMX1lLw3YfPEMkzW0xAPitqnpWSad6sNFio4PC3PvA4A3ouh6WLIfU83dJfqoRtNuQ==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 622, DateTimeKind.Local).AddTicks(3041),
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = new Guid("9df864a0-89fd-4ef2-9db7-8f0eca88b715"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1982, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f47b95b6-6df5-41a9-bd72-e19a88206ae1",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(2768),
                            Email = "admin2@example.com",
                            EmailConfirmed = true,
                            FirstName = "SecondAdmin",
                            Gender = (byte)1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN2@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN2",
                            PasswordHash = "AQAAAAIAAYagAAAAEIZUUSnXQSuX6nwQppRJ1FIwMOymSNr/8oPIfwkyVKsvmANgYbW8NG41Zeml8iEMkA==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(2787),
                            UserName = "admin2"
                        },
                        new
                        {
                            Id = new Guid("75c84fed-881c-4b05-8a7c-293ee0d5ca1a"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5128e356-757a-45f8-a834-ba08ad48b16b",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(3815),
                            Email = "teacher1@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher1",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER1@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER1",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(3816),
                            UserName = "teacher1"
                        },
                        new
                        {
                            Id = new Guid("0a20099b-1efb-4078-96bc-2b0f91d12636"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fbf20cb3-5123-4457-a5fc-432c22f211bc",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(4161),
                            Email = "teacher2@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher2",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER2@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER2",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(4162),
                            UserName = "teacher2"
                        },
                        new
                        {
                            Id = new Guid("3b5b4d96-b5fb-4286-a210-5a396160a4a9"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "32d9934e-fd39-4094-8f12-e8590fad1028",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(5635),
                            Email = "teacher3@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher3",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER3@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER3",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(5636),
                            UserName = "teacher3"
                        },
                        new
                        {
                            Id = new Guid("f4c13c04-9473-4080-99f9-91c535d40268"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "59845610-1065-4336-b78b-81d74b59056d",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(5890),
                            Email = "teacher4@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher4",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER4@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER4",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(5891),
                            UserName = "teacher4"
                        },
                        new
                        {
                            Id = new Guid("3866db57-8ec1-49b4-846d-9c74af8d00a5"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "18336efe-ec5a-415d-a157-0d23198d8f82",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6090),
                            Email = "teacher5@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher5",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER5@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER5",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6091),
                            UserName = "teacher5"
                        },
                        new
                        {
                            Id = new Guid("1783e535-b8f1-4819-8986-9f90ee126504"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "44a05360-6881-4cf0-928e-93a7ad304924",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6256),
                            Email = "teacher6@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher6",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER6@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER6",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6270),
                            UserName = "teacher6"
                        },
                        new
                        {
                            Id = new Guid("d0fbe324-efff-4c70-9a68-2323d2e28404"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d92eab57-2893-4270-b754-97ec1c7d1ace",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6442),
                            Email = "teacher7@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher7",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER7@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER7",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6443),
                            UserName = "teacher7"
                        },
                        new
                        {
                            Id = new Guid("558c71b4-8510-45b8-a873-80f1227451b1"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0ab5a5f9-12fe-489b-bef9-580d00f71bc5",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6804),
                            Email = "teacher8@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher8",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER8@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER8",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6806),
                            UserName = "teacher8"
                        },
                        new
                        {
                            Id = new Guid("e4c5a420-944e-4e60-a278-f48dc059a7b8"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "89bec4c9-ecff-4db5-93df-e5ea629e44e2",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6919),
                            Email = "teacher9@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher9",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER9@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER9",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(6920),
                            UserName = "teacher9"
                        },
                        new
                        {
                            Id = new Guid("62237c2b-729b-453f-8518-26a97578a0fa"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3136524e-ee52-419c-90a7-7482073c5afe",
                            CreatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7015),
                            Email = "teacher10@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher10",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER10@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER10",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 10, 8, 11, 17, 26, 727, DateTimeKind.Local).AddTicks(7016),
                            UserName = "teacher10"
                        });
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Faq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("FaqAnswer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FaqCategories")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FaqQuestion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Faqs");
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 1",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 1",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 2",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 2",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 3",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 3",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 4",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 4",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 5",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 5",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 6",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 6",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 7",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 7",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 8",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 8",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 9",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 9",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 10",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 10",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 11",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 11",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 12",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 12",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 13",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 13",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 14",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 14",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 15",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 15",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 16",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 16",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 17",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 17",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 18",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 18",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 19",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 19",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 20",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 20",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 21",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 21",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 22",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 22",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 23",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 23",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 24",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 24",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 25",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 25",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 26",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 26",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 27",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 27",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 28",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 28",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 29",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 29",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            AdminId = new Guid("442d2b8e-1764-4631-bb67-76e05b0ef67d"),
                            Content = "This is the content of news 30",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 30",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Faq", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", "Admin")
                        .WithMany("Faqs")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.News", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", "Admin")
                        .WithMany("News")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Admin", b =>
                {
                    b.Navigation("Faqs");

                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
