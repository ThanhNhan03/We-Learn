// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WeLearnAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210"),
                            ConcurrencyStamp = "49f4ba6c-9123-444b-8e44-063342f55684",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514"),
                            ConcurrencyStamp = "0c6b4d64-2431-420d-8568-67b7a4d2d833",
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            RoleId = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210")
                        },
                        new
                        {
                            UserId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("3b6b8489-4075-4625-9689-06d4884cd027"),
                            RoleId = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210")
                        },
                        new
                        {
                            UserId = new Guid("2952c90a-1718-4c77-b66c-a40c2292a710"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("b29fa928-0d73-4260-bed8-9ebd2a637177"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("9780ac73-137e-45b8-9870-789bd2878e35"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("df9f3af1-aa5b-4c62-968e-c351bdd6ba18"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("801e660c-638e-40b1-83f2-fe550965a213"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("1451b12d-9c03-4088-9934-5603483c1acf"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("bd52a710-92d4-49f4-8f08-fd55a4c5a43d"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("8d7aac49-009d-497e-a303-2bbb1b31c3c9"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("e41a9e36-1fb2-4f3c-97a5-f4436c5cf158"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("c0173fa1-a2c8-402a-9fec-bc2f0f9a0113"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RememberToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("48f622f2-c86a-4bc9-9df6-8879682e2251"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7a3ea47f-37e2-4bac-8ac6-1dcd1a9c1fa3",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7854),
                            Email = "user1@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName1",
                            Gender = (byte)1,
                            LastName = "UserLastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_1",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7827),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7855),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("ed22c4fd-5894-480e-bb3f-c37aa95fa4bc"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5a27e39c-284f-43bb-8043-207f59d8273b",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7939),
                            Email = "user2@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName2",
                            Gender = (byte)1,
                            LastName = "UserLastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_2",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7937),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7940),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("4a5bb3f4-4474-4998-a75c-229863d941a5"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e142ba1b-27e1-4234-a3ac-9b58bb168dca",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8000),
                            Email = "user3@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName3",
                            Gender = (byte)1,
                            LastName = "UserLastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_3",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8000),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8001),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("0936b8aa-2e91-4506-a69a-1848ef9ed8c1"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "568a9313-8172-4c58-bae6-2ec1c37b8bad",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8069),
                            Email = "user4@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName4",
                            Gender = (byte)1,
                            LastName = "UserLastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_4",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8069),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8070),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("904737ed-0e8c-4572-b644-4e5acb2d0a0b"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ae49192c-0b74-4557-b077-98f844e41aa7",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8154),
                            Email = "user5@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName5",
                            Gender = (byte)1,
                            LastName = "UserLastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_5",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8153),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8154),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("7a402ab8-8c66-41b0-b468-7ff46a0baf10"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5f963f8c-a877-4e6e-af98-956a13fa930e",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8209),
                            Email = "user6@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName6",
                            Gender = (byte)1,
                            LastName = "UserLastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_6",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8208),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8209),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("15ef872e-d8f7-456f-b449-6026b162ca83"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "028fce45-f3bf-4e5e-ba82-3d08d5cac575",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8260),
                            Email = "user7@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName7",
                            Gender = (byte)1,
                            LastName = "UserLastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_7",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8259),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8260),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("9077bcbb-5dbb-4f7a-b2ff-40ac7a1e5584"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "17807433-6cfe-46ba-bbd3-2ea30d93063a",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8297),
                            Email = "user8@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName8",
                            Gender = (byte)1,
                            LastName = "UserLastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_8",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8297),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8298),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("78836550-dbba-4367-921c-38cb502fb5a6"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4b244f17-050e-4818-b097-44577a769f55",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8478),
                            Email = "user9@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName9",
                            Gender = (byte)1,
                            LastName = "UserLastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_9",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8477),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8478),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("886601fc-94a8-4596-932e-9d7d419d6534"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "694f43c5-fe89-44cf-adf7-184e1a352399",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8529),
                            Email = "user10@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName10",
                            Gender = (byte)1,
                            LastName = "UserLastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_10",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8528),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8529),
                            UserName = "user10"
                        },
                        new
                        {
                            Id = new Guid("6df298a5-7fc9-405a-971e-40c769aa648b"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0a1f42eb-01ea-4424-8694-2e3711ce5993",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8568),
                            Email = "user11@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName11",
                            Gender = (byte)1,
                            LastName = "UserLastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_11",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8568),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8569),
                            UserName = "user11"
                        },
                        new
                        {
                            Id = new Guid("7c3df089-0008-49da-8cf0-c384f48cabe4"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d8558e5f-3ab8-4531-aee2-fc1143351e08",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8605),
                            Email = "user12@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName12",
                            Gender = (byte)1,
                            LastName = "UserLastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_12",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8605),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8605),
                            UserName = "user12"
                        },
                        new
                        {
                            Id = new Guid("c1b0e3f1-2b95-4f4d-a02b-bc372557e4b9"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a27684bc-ab76-4420-ab6c-37bfd2a9fd65",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8646),
                            Email = "user13@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName13",
                            Gender = (byte)1,
                            LastName = "UserLastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_13",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8645),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8646),
                            UserName = "user13"
                        },
                        new
                        {
                            Id = new Guid("a0a15df6-7842-451b-8631-7e8d931c30e2"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "83f7fcb9-a260-4cad-b64c-e7d114f7a34b",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8686),
                            Email = "user14@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName14",
                            Gender = (byte)1,
                            LastName = "UserLastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_14",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8686),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8687),
                            UserName = "user14"
                        },
                        new
                        {
                            Id = new Guid("984ca89c-8a60-4f42-9335-c734bbf7b1b6"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8833e600-87cd-4fee-b985-5d7a2def1d37",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8730),
                            Email = "user15@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName15",
                            Gender = (byte)1,
                            LastName = "UserLastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_15",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8729),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8730),
                            UserName = "user15"
                        },
                        new
                        {
                            Id = new Guid("2c3ae6d9-da07-43d3-9996-7be6e7719e42"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "eb15c63d-267b-456a-a4b2-5b935de28381",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8772),
                            Email = "user16@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName16",
                            Gender = (byte)1,
                            LastName = "UserLastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_16",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8772),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8773),
                            UserName = "user16"
                        },
                        new
                        {
                            Id = new Guid("45df22c4-9ff1-488a-ad25-486ac5d41381"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c62aff03-41a5-4b2a-bdd9-68dfaaa1a8cb",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8811),
                            Email = "user17@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName17",
                            Gender = (byte)1,
                            LastName = "UserLastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_17",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8811),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8811),
                            UserName = "user17"
                        },
                        new
                        {
                            Id = new Guid("1805203f-0b4c-42c6-807b-de4622fe6baf"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5c30d787-e229-4117-a6b1-1fe22e39f990",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8854),
                            Email = "user18@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName18",
                            Gender = (byte)1,
                            LastName = "UserLastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_18",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8853),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(8854),
                            UserName = "user18"
                        },
                        new
                        {
                            Id = new Guid("7d326f55-98c3-4633-b278-354547634903"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7e826986-f548-442b-8f05-25c06b0f7cd4",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4731),
                            Email = "user19@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName19",
                            Gender = (byte)1,
                            LastName = "UserLastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_19",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4728),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4731),
                            UserName = "user19"
                        },
                        new
                        {
                            Id = new Guid("eccf73c2-a551-452b-9a9e-f600e4f4e6fe"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a95ab39d-4004-4530-b1b7-9b6494371071",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4882),
                            Email = "user20@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName20",
                            Gender = (byte)1,
                            LastName = "UserLastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_20",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4882),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4883),
                            UserName = "user20"
                        },
                        new
                        {
                            Id = new Guid("4c975796-53f6-4a3e-bee2-bb1828a15bb3"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fce4e7ea-32d3-4758-9560-79c9cb319acd",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4930),
                            Email = "user21@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName21",
                            Gender = (byte)1,
                            LastName = "UserLastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER21@EXAMPLE.COM",
                            NormalizedUserName = "USER21",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_21",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4930),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4931),
                            UserName = "user21"
                        },
                        new
                        {
                            Id = new Guid("e7f5a4ea-4949-4427-959d-30368714167b"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ffdf9beb-875c-4edc-91da-195559480daf",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4967),
                            Email = "user22@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName22",
                            Gender = (byte)1,
                            LastName = "UserLastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER22@EXAMPLE.COM",
                            NormalizedUserName = "USER22",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_22",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4967),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(4968),
                            UserName = "user22"
                        },
                        new
                        {
                            Id = new Guid("c92707e6-9316-4ada-ab9b-1c9e2ac1eede"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6203f082-c14c-48bc-be1b-bf9821a5cec4",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5002),
                            Email = "user23@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName23",
                            Gender = (byte)1,
                            LastName = "UserLastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER23@EXAMPLE.COM",
                            NormalizedUserName = "USER23",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_23",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5002),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5003),
                            UserName = "user23"
                        },
                        new
                        {
                            Id = new Guid("d417222d-119f-4547-874b-f713c567a96e"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0d826964-8689-4ba2-9a7d-6d3f5ffb7118",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5048),
                            Email = "user24@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName24",
                            Gender = (byte)1,
                            LastName = "UserLastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER24@EXAMPLE.COM",
                            NormalizedUserName = "USER24",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_24",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5048),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5049),
                            UserName = "user24"
                        },
                        new
                        {
                            Id = new Guid("f659691a-11c6-4517-9b56-e3428f7b26ee"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "92dfa931-fb66-4346-af14-80146998c2b9",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5090),
                            Email = "user25@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName25",
                            Gender = (byte)1,
                            LastName = "UserLastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER25@EXAMPLE.COM",
                            NormalizedUserName = "USER25",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_25",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5090),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5091),
                            UserName = "user25"
                        },
                        new
                        {
                            Id = new Guid("76bc427f-8ac4-4d0d-ace6-2a775a34f7d1"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f4556ffe-5acb-4314-b463-8494313e6a5a",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5129),
                            Email = "user26@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName26",
                            Gender = (byte)1,
                            LastName = "UserLastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER26@EXAMPLE.COM",
                            NormalizedUserName = "USER26",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_26",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5129),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5130),
                            UserName = "user26"
                        },
                        new
                        {
                            Id = new Guid("77de27ae-d777-46dc-aaad-dc93da3d807c"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "66d3825e-9fe5-4224-9c26-a13018d2e807",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5165),
                            Email = "user27@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName27",
                            Gender = (byte)1,
                            LastName = "UserLastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER27@EXAMPLE.COM",
                            NormalizedUserName = "USER27",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_27",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5164),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5165),
                            UserName = "user27"
                        },
                        new
                        {
                            Id = new Guid("2559b95a-c8c5-496f-bb02-efdccc3f0f58"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d17cfb30-3ac6-4eb9-ab78-4f3881858d4b",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5201),
                            Email = "user28@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName28",
                            Gender = (byte)1,
                            LastName = "UserLastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER28@EXAMPLE.COM",
                            NormalizedUserName = "USER28",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_28",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5200),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5201),
                            UserName = "user28"
                        },
                        new
                        {
                            Id = new Guid("6b617dd8-620e-4151-913b-ade9b5ff4025"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dc1fd07c-98b9-4ffb-ad65-67552e6a1131",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5233),
                            Email = "user29@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName29",
                            Gender = (byte)1,
                            LastName = "UserLastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER29@EXAMPLE.COM",
                            NormalizedUserName = "USER29",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_29",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5232),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5233),
                            UserName = "user29"
                        },
                        new
                        {
                            Id = new Guid("a7458ddc-f7f4-4a9c-8313-a1273557e2aa"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "28d64d93-0fe9-4d38-a9d2-0c98e8e0318a",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5271),
                            Email = "user30@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName30",
                            Gender = (byte)1,
                            LastName = "UserLastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER30@EXAMPLE.COM",
                            NormalizedUserName = "USER30",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_30",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5263),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 838, DateTimeKind.Local).AddTicks(5271),
                            UserName = "user30"
                        });
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9e213b71-cda6-4851-8943-61289ea7e824",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 757, DateTimeKind.Local).AddTicks(2767),
                            Email = "admin1@example.com",
                            EmailConfirmed = true,
                            FirstName = "FirstAdmin",
                            Gender = (byte)1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN1@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN1",
                            PasswordHash = "AQAAAAIAAYagAAAAEDeRvh96NNgh54caBaBB7tTHgBE3nBOzz/goZfbYFPswKXr5HdXouP3qf+bkqt4UjQ==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 757, DateTimeKind.Local).AddTicks(2782),
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = new Guid("3b6b8489-4075-4625-9689-06d4884cd027"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1982, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "324f7a56-7310-4565-ad6b-76a93755c83a",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(4559),
                            Email = "admin2@example.com",
                            EmailConfirmed = true,
                            FirstName = "SecondAdmin",
                            Gender = (byte)1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN2@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN2",
                            PasswordHash = "AQAAAAIAAYagAAAAEDMW/4W9RiSYDtRh67dOd6EQcQmHm1LfgV1ZG3d+6EMR2r4Bs5SKg2WT+5zY7NFrSQ==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(4576),
                            UserName = "admin2"
                        },
                        new
                        {
                            Id = new Guid("2952c90a-1718-4c77-b66c-a40c2292a710"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "682d012d-755c-43de-a3ee-5961dad12767",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5438),
                            Email = "teacher1@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher1",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER1@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER1",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5439),
                            UserName = "teacher1"
                        },
                        new
                        {
                            Id = new Guid("b29fa928-0d73-4260-bed8-9ebd2a637177"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "19562a4d-3e48-4379-a9c5-0f119a830d2e",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5643),
                            Email = "teacher2@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher2",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER2@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER2",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5644),
                            UserName = "teacher2"
                        },
                        new
                        {
                            Id = new Guid("9780ac73-137e-45b8-9870-789bd2878e35"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "61352dda-daef-4db9-b7d5-1f01e72f4fc0",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5788),
                            Email = "teacher3@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher3",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER3@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER3",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5788),
                            UserName = "teacher3"
                        },
                        new
                        {
                            Id = new Guid("df9f3af1-aa5b-4c62-968e-c351bdd6ba18"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "22835d6c-5848-4391-b19d-845e8a74ee14",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5870),
                            Email = "teacher4@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher4",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER4@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER4",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(5871),
                            UserName = "teacher4"
                        },
                        new
                        {
                            Id = new Guid("801e660c-638e-40b1-83f2-fe550965a213"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "edd5315b-62c0-4f44-9210-71da2f10d873",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7205),
                            Email = "teacher5@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher5",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER5@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER5",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7206),
                            UserName = "teacher5"
                        },
                        new
                        {
                            Id = new Guid("1451b12d-9c03-4088-9934-5603483c1acf"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4559c446-4f68-4be6-8995-1469489bb31b",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7344),
                            Email = "teacher6@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher6",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER6@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER6",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7344),
                            UserName = "teacher6"
                        },
                        new
                        {
                            Id = new Guid("bd52a710-92d4-49f4-8f08-fd55a4c5a43d"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b6186480-e42b-40b4-ad1f-19e62024b0fb",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7417),
                            Email = "teacher7@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher7",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER7@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER7",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7428),
                            UserName = "teacher7"
                        },
                        new
                        {
                            Id = new Guid("8d7aac49-009d-497e-a303-2bbb1b31c3c9"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1ca29be8-e464-4380-8325-ae41d09ed739",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7603),
                            Email = "teacher8@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher8",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER8@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER8",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7604),
                            UserName = "teacher8"
                        },
                        new
                        {
                            Id = new Guid("e41a9e36-1fb2-4f3c-97a5-f4436c5cf158"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a45ba32c-c858-4bd2-ab19-17d9539befce",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7677),
                            Email = "teacher9@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher9",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER9@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER9",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7677),
                            UserName = "teacher9"
                        },
                        new
                        {
                            Id = new Guid("c0173fa1-a2c8-402a-9fec-bc2f0f9a0113"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "95876dc9-21c7-457e-be4e-d5ecf9948930",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7739),
                            Email = "teacher10@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher10",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER10@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER10",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 47, 58, 837, DateTimeKind.Local).AddTicks(7739),
                            UserName = "teacher10"
                        });
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 1",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 1",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 2",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 2",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 3",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 3",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 4",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 4",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 5",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 5",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 6",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 6",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 7",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 7",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 8",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 8",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 9",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 9",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 10",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 10",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 11",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 11",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 12",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 12",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 13",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 13",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 14",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 14",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 15",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 15",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 16",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 16",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 17",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 17",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 18",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 18",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 19",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 19",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 20",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 20",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 21",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 21",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 22",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 22",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 23",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 23",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 24",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 24",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 25",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 25",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 26",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 26",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 27",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 27",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 28",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 28",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 29",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 29",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            AdminId = new Guid("28259c6d-5f55-4f75-9964-11b5079153c8"),
                            Content = "This is the content of news 30",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "News Title 30",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.News", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", "Admin")
                        .WithMany("News")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Admin", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
