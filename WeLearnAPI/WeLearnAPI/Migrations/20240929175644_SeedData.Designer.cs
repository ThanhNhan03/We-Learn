// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WeLearnAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240929175644_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210"),
                            ConcurrencyStamp = "49f4ba6c-9123-444b-8e44-063342f55684",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514"),
                            ConcurrencyStamp = "0c6b4d64-2431-420d-8568-67b7a4d2d833",
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            RoleId = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210")
                        },
                        new
                        {
                            UserId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("d81b8ed9-be68-4a35-a361-c010670a1d5a"),
                            RoleId = new Guid("2c5e174e-3b0e-446f-86af-483d56fd7210")
                        },
                        new
                        {
                            UserId = new Guid("93ed089d-9645-4d8e-af7d-ad520bc5437f"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("e30185c9-c3c0-436f-805b-4d90246be632"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("805a2744-d048-47e8-af7a-e4c9cef6817c"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("33912ce4-146d-4713-ab34-7b015d454cdf"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("a5be4496-7f22-4681-b842-a3c60634d448"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("7853fe73-9cd1-4e9e-906a-8f70159e0ebb"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("165f561f-927b-44ea-afb7-10b0282b518f"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("a0e60fe6-ec4e-4847-8728-bf9faa1ebbf0"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("21e6e157-5847-45f7-96c3-727101718958"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        },
                        new
                        {
                            UserId = new Guid("6bb560ed-4e70-4278-9927-01a2887adb95"),
                            RoleId = new Guid("0da24f70-3cc9-44b1-a48e-aa9d93635514")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RememberToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8877b08-be6c-4841-8f55-dba9c764a839"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cecce020-e874-4dde-b34c-becfab5ecb90",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5229),
                            Email = "user1@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName1",
                            Gender = (byte)1,
                            LastName = "UserLastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_1",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5177),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5231),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("7a8e8e68-d4c4-4a1f-ac34-6dda2370af99"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bcdfdb8c-f65c-4e1c-a7bc-db40ac98d025",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5316),
                            Email = "user2@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName2",
                            Gender = (byte)1,
                            LastName = "UserLastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_2",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5315),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5316),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("851da6ff-a17b-4bda-912e-109b117ae4dd"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dac002f2-dd3d-428c-a879-1e63204b89d3",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5379),
                            Email = "user3@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName3",
                            Gender = (byte)1,
                            LastName = "UserLastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_3",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5377),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5379),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("8e84e041-0d87-42ff-a1d6-3ac817b8efd9"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "97d1c119-d0f3-4c12-aaf8-ba22b10862f5",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5471),
                            Email = "user4@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName4",
                            Gender = (byte)1,
                            LastName = "UserLastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_4",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5469),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5471),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("3f6e801e-dd53-45bb-b3bd-8ce58c6593e0"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "eb25896c-6009-40fe-bda9-cd6afbe59b2e",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5545),
                            Email = "user5@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName5",
                            Gender = (byte)1,
                            LastName = "UserLastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_5",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5543),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5545),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("c2e78182-02a0-48ba-9f67-1cad88b7e329"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "808df78a-102e-4894-a439-df0b7936a2ac",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5618),
                            Email = "user6@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName6",
                            Gender = (byte)1,
                            LastName = "UserLastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_6",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5617),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5618),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("9e2c3fb7-a5f9-45ca-83fa-9e89d1255ef7"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4f4fc409-cc8e-4cad-97d9-e90722b02dcc",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5685),
                            Email = "user7@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName7",
                            Gender = (byte)1,
                            LastName = "UserLastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_7",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5684),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5686),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("d03b2e02-1997-405d-804c-b3b0cc19fe59"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bb92af9e-d0d8-4e04-8b8a-cd3188c79653",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5752),
                            Email = "user8@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName8",
                            Gender = (byte)1,
                            LastName = "UserLastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_8",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5750),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5752),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("3f648733-399a-4e10-a50d-a2b0d9927c5f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bae6d8e7-e5e4-461a-9761-ad9b4080cd5c",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6000),
                            Email = "user9@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName9",
                            Gender = (byte)1,
                            LastName = "UserLastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_9",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5999),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6001),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("cea6bc37-0fa2-4db4-aa23-b0d4c8e3de59"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dfa69b37-8415-4840-ae0b-d89ceb73e85e",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6083),
                            Email = "user10@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName10",
                            Gender = (byte)1,
                            LastName = "UserLastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_10",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6082),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6084),
                            UserName = "user10"
                        },
                        new
                        {
                            Id = new Guid("170a9f79-05f7-4802-988c-cab6a3b0c564"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9017eda8-c3dc-4105-8f39-e0a5ea8878e7",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6148),
                            Email = "user11@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName11",
                            Gender = (byte)1,
                            LastName = "UserLastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_11",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6146),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6148),
                            UserName = "user11"
                        },
                        new
                        {
                            Id = new Guid("f966c00b-0d7c-42b2-9918-d19ba977c278"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4b0b459c-38d2-4936-b93d-bd429bffd477",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6213),
                            Email = "user12@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName12",
                            Gender = (byte)1,
                            LastName = "UserLastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_12",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6212),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6214),
                            UserName = "user12"
                        },
                        new
                        {
                            Id = new Guid("8140604d-4428-49c8-ad32-b05a1c10cae3"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1eb49235-cdf3-45c7-bbd6-e8352fa9ff0c",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6271),
                            Email = "user13@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName13",
                            Gender = (byte)1,
                            LastName = "UserLastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_13",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6270),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6272),
                            UserName = "user13"
                        },
                        new
                        {
                            Id = new Guid("11a0014d-01b4-41f8-a1ae-533358367328"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "be3ac9e7-d732-45da-ad9f-dfb42bdb9d99",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6333),
                            Email = "user14@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName14",
                            Gender = (byte)1,
                            LastName = "UserLastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_14",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6331),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6333),
                            UserName = "user14"
                        },
                        new
                        {
                            Id = new Guid("18dae43f-238f-4d22-9b89-55c1f59ff407"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "07b840a8-12d4-4b11-bc14-6478004c5cb7",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6397),
                            Email = "user15@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName15",
                            Gender = (byte)1,
                            LastName = "UserLastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_15",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6396),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6398),
                            UserName = "user15"
                        },
                        new
                        {
                            Id = new Guid("91ad9c77-f7c4-479d-8a7e-e7259bcdbab6"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "eb86f050-e59a-47ce-89e6-7739dfeb33ed",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6468),
                            Email = "user16@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName16",
                            Gender = (byte)1,
                            LastName = "UserLastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_16",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6467),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6469),
                            UserName = "user16"
                        },
                        new
                        {
                            Id = new Guid("bf7dc463-bcb3-43ee-b569-04ea3d961cba"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e506f231-da12-4d66-aaf9-02091601ed16",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6529),
                            Email = "user17@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName17",
                            Gender = (byte)1,
                            LastName = "UserLastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_17",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6528),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6530),
                            UserName = "user17"
                        },
                        new
                        {
                            Id = new Guid("f4cfd463-920d-4471-99e3-65ef1421ccb7"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d3a8217b-b4dd-4bf4-998a-c5e88ad4c9b4",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6614),
                            Email = "user18@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName18",
                            Gender = (byte)1,
                            LastName = "UserLastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_18",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6613),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(6615),
                            UserName = "user18"
                        },
                        new
                        {
                            Id = new Guid("6781f40c-e891-446e-a29a-9e035570217e"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c437e4a4-edcf-4979-b424-43f3386f0d95",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7053),
                            Email = "user19@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName19",
                            Gender = (byte)1,
                            LastName = "UserLastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_19",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7051),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7054),
                            UserName = "user19"
                        },
                        new
                        {
                            Id = new Guid("f5229fb3-a700-486e-be0a-42b44cdb226e"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f63b8b7e-b8e0-4990-8ab8-f32646dc7893",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7219),
                            Email = "user20@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName20",
                            Gender = (byte)1,
                            LastName = "UserLastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_20",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7218),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7220),
                            UserName = "user20"
                        },
                        new
                        {
                            Id = new Guid("cb842099-8e6e-406e-a95d-0906f2442a33"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4d3cd539-fde3-411c-b681-f805fac3d8f4",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7296),
                            Email = "user21@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName21",
                            Gender = (byte)1,
                            LastName = "UserLastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER21@EXAMPLE.COM",
                            NormalizedUserName = "USER21",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_21",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7295),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7297),
                            UserName = "user21"
                        },
                        new
                        {
                            Id = new Guid("2805fb17-bcb1-41d7-881b-015fb0420699"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7968a1e1-208c-4bbb-87a4-2177fa03adf2",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7363),
                            Email = "user22@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName22",
                            Gender = (byte)1,
                            LastName = "UserLastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER22@EXAMPLE.COM",
                            NormalizedUserName = "USER22",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_22",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7361),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7363),
                            UserName = "user22"
                        },
                        new
                        {
                            Id = new Guid("a27442ee-2ad7-4598-b444-2281b620b234"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "372f856c-b773-47de-96d5-9bbac19c0134",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7579),
                            Email = "user23@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName23",
                            Gender = (byte)1,
                            LastName = "UserLastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER23@EXAMPLE.COM",
                            NormalizedUserName = "USER23",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_23",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7577),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7580),
                            UserName = "user23"
                        },
                        new
                        {
                            Id = new Guid("4bd71b57-d5c9-4a83-a878-9e3916827215"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3eb4295a-c47c-47ff-a68c-1b43214e9a94",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7655),
                            Email = "user24@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName24",
                            Gender = (byte)1,
                            LastName = "UserLastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER24@EXAMPLE.COM",
                            NormalizedUserName = "USER24",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_24",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7654),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7656),
                            UserName = "user24"
                        },
                        new
                        {
                            Id = new Guid("991655f9-768e-46f2-af99-7130a14e632c"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ba9fa3a9-0261-491c-ad19-c8d8582d7e55",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7722),
                            Email = "user25@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName25",
                            Gender = (byte)1,
                            LastName = "UserLastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER25@EXAMPLE.COM",
                            NormalizedUserName = "USER25",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_25",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7721),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7723),
                            UserName = "user25"
                        },
                        new
                        {
                            Id = new Guid("127933d9-4fc3-4af1-a638-27494a1f5d7f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "690828a4-48a5-435b-85a2-19c4a05e912a",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7804),
                            Email = "user26@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName26",
                            Gender = (byte)1,
                            LastName = "UserLastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER26@EXAMPLE.COM",
                            NormalizedUserName = "USER26",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_26",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7803),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7805),
                            UserName = "user26"
                        },
                        new
                        {
                            Id = new Guid("49d620fe-1634-4f0e-b43d-712ae8c54c68"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "436c88a3-9e56-4c32-86e6-eb20fe59068f",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7875),
                            Email = "user27@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName27",
                            Gender = (byte)1,
                            LastName = "UserLastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER27@EXAMPLE.COM",
                            NormalizedUserName = "USER27",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_27",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7874),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7876),
                            UserName = "user27"
                        },
                        new
                        {
                            Id = new Guid("8a79ad02-66bc-454c-98a5-ef1b333b1d24"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bfe98cf9-25a7-49b7-9d59-83f45e7acaf0",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7951),
                            Email = "user28@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName28",
                            Gender = (byte)1,
                            LastName = "UserLastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER28@EXAMPLE.COM",
                            NormalizedUserName = "USER28",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_28",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7949),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(7951),
                            UserName = "user28"
                        },
                        new
                        {
                            Id = new Guid("2ca2216d-2d56-41e1-a61f-724d334dcb14"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "04f26627-13c3-4b00-b182-15a4dc4a68d0",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8011),
                            Email = "user29@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName29",
                            Gender = (byte)1,
                            LastName = "UserLastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER29@EXAMPLE.COM",
                            NormalizedUserName = "USER29",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_29",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8010),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8012),
                            UserName = "user29"
                        },
                        new
                        {
                            Id = new Guid("d91144e9-02dd-4551-9e8c-8a0f37767585"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3cd1e6dc-3ecb-46cd-8976-fbfbce7de820",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8082),
                            Email = "user30@example.com",
                            EmailConfirmed = true,
                            FirstName = "UserFirstName30",
                            Gender = (byte)1,
                            LastName = "UserLastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER30@EXAMPLE.COM",
                            NormalizedUserName = "USER30",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "refresh_token_30",
                            RefreshTokenExpiryTime = new DateTime(2024, 10, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8071),
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8082),
                            UserName = "user30"
                        });
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e210dbcb-cda2-4bd7-812c-ea11dfeb3bbe",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 361, DateTimeKind.Local).AddTicks(348),
                            Email = "admin1@example.com",
                            EmailConfirmed = true,
                            FirstName = "FirstAdmin",
                            Gender = (byte)1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN1@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN1",
                            PasswordHash = "AQAAAAIAAYagAAAAELGjoHDMUmcGZ84hJTwl3P0Pwx+oVQDUHCxGWnPVMgHGHnRA/BKdDJyQSfqG7nZaxA==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 361, DateTimeKind.Local).AddTicks(364),
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = new Guid("d81b8ed9-be68-4a35-a361-c010670a1d5a"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1982, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "878a1961-a7a3-4d6b-9bc9-55dbc1f466f8",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(2135),
                            Email = "admin2@example.com",
                            EmailConfirmed = true,
                            FirstName = "SecondAdmin",
                            Gender = (byte)1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN2@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN2",
                            PasswordHash = "AQAAAAIAAYagAAAAEBj3XRS6XJvNG/ymPDSKPdBDQWeYyG7b13y1fJ8yADzua/9HGbg8tgPFzdrW5sYGZA==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(2158),
                            UserName = "admin2"
                        },
                        new
                        {
                            Id = new Guid("93ed089d-9645-4d8e-af7d-ad520bc5437f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "82a35ed4-1686-4bd5-bd1e-01c125a31469",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(3271),
                            Email = "teacher1@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher1",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER1@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER1",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(3273),
                            UserName = "teacher1"
                        },
                        new
                        {
                            Id = new Guid("e30185c9-c3c0-436f-805b-4d90246be632"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f6213f2f-1715-4fc7-86a7-1f2a42356cff",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(3699),
                            Email = "teacher2@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher2",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER2@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER2",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(3701),
                            UserName = "teacher2"
                        },
                        new
                        {
                            Id = new Guid("805a2744-d048-47e8-af7a-e4c9cef6817c"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8ba71723-f8ff-46da-9e89-3075d1f61009",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(3931),
                            Email = "teacher3@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher3",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER3@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER3",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(3931),
                            UserName = "teacher3"
                        },
                        new
                        {
                            Id = new Guid("33912ce4-146d-4713-ab34-7b015d454cdf"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4f7bf98e-5006-4c49-b85d-90fda2fecde7",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4044),
                            Email = "teacher4@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher4",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER4@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER4",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4045),
                            UserName = "teacher4"
                        },
                        new
                        {
                            Id = new Guid("a5be4496-7f22-4681-b842-a3c60634d448"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6734c18e-8bef-44df-8f2f-f7300860ef5d",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4225),
                            Email = "teacher5@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher5",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER5@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER5",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4226),
                            UserName = "teacher5"
                        },
                        new
                        {
                            Id = new Guid("7853fe73-9cd1-4e9e-906a-8f70159e0ebb"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "feb4b649-1edd-42a6-b3ea-adfb83aa695d",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4379),
                            Email = "teacher6@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher6",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER6@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER6",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4380),
                            UserName = "teacher6"
                        },
                        new
                        {
                            Id = new Guid("165f561f-927b-44ea-afb7-10b0282b518f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dbbe9e4b-412e-4159-9539-a9ecf415a66d",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4496),
                            Email = "teacher7@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher7",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER7@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER7",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4512),
                            UserName = "teacher7"
                        },
                        new
                        {
                            Id = new Guid("a0e60fe6-ec4e-4847-8728-bf9faa1ebbf0"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fedab6d2-934d-4038-8865-ec18441f1f0c",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4777),
                            Email = "teacher8@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher8",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER8@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER8",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4778),
                            UserName = "teacher8"
                        },
                        new
                        {
                            Id = new Guid("21e6e157-5847-45f7-96c3-727101718958"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3d38996e-beef-413f-81ad-2bbb1bda76da",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4905),
                            Email = "teacher9@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher9",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER9@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER9",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(4906),
                            UserName = "teacher9"
                        },
                        new
                        {
                            Id = new Guid("6bb560ed-4e70-4278-9927-01a2887adb95"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4f9950c4-a2d4-46f8-9181-7ce2ed8f66df",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5035),
                            Email = "teacher10@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher10",
                            Gender = (byte)1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER10@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER10",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(5036),
                            UserName = "teacher10"
                        });
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 1",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8147),
                            Title = "News Title 1"
                        },
                        new
                        {
                            Id = 2,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 2",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8196),
                            Title = "News Title 2"
                        },
                        new
                        {
                            Id = 3,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 3",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8232),
                            Title = "News Title 3"
                        },
                        new
                        {
                            Id = 4,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 4",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8266),
                            Title = "News Title 4"
                        },
                        new
                        {
                            Id = 5,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 5",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8301),
                            Title = "News Title 5"
                        },
                        new
                        {
                            Id = 6,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 6",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8338),
                            Title = "News Title 6"
                        },
                        new
                        {
                            Id = 7,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 7",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8372),
                            Title = "News Title 7"
                        },
                        new
                        {
                            Id = 8,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 8",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8405),
                            Title = "News Title 8"
                        },
                        new
                        {
                            Id = 9,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 9",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8441),
                            Title = "News Title 9"
                        },
                        new
                        {
                            Id = 10,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 10",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8489),
                            Title = "News Title 10"
                        },
                        new
                        {
                            Id = 11,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 11",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8524),
                            Title = "News Title 11"
                        },
                        new
                        {
                            Id = 12,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 12",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8558),
                            Title = "News Title 12"
                        },
                        new
                        {
                            Id = 13,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 13",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8598),
                            Title = "News Title 13"
                        },
                        new
                        {
                            Id = 14,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 14",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8634),
                            Title = "News Title 14"
                        },
                        new
                        {
                            Id = 15,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 15",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8669),
                            Title = "News Title 15"
                        },
                        new
                        {
                            Id = 16,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 16",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8705),
                            Title = "News Title 16"
                        },
                        new
                        {
                            Id = 17,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 17",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8741),
                            Title = "News Title 17"
                        },
                        new
                        {
                            Id = 18,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 18",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8778),
                            Title = "News Title 18"
                        },
                        new
                        {
                            Id = 19,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 19",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8814),
                            Title = "News Title 19"
                        },
                        new
                        {
                            Id = 20,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 20",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8850),
                            Title = "News Title 20"
                        },
                        new
                        {
                            Id = 21,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 21",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8893),
                            Title = "News Title 21"
                        },
                        new
                        {
                            Id = 22,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 22",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8934),
                            Title = "News Title 22"
                        },
                        new
                        {
                            Id = 23,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 23",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(8974),
                            Title = "News Title 23"
                        },
                        new
                        {
                            Id = 24,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 24",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9008),
                            Title = "News Title 24"
                        },
                        new
                        {
                            Id = 25,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 25",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9042),
                            Title = "News Title 25"
                        },
                        new
                        {
                            Id = 26,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 26",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9076),
                            Title = "News Title 26"
                        },
                        new
                        {
                            Id = 27,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 27",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9113),
                            Title = "News Title 27"
                        },
                        new
                        {
                            Id = 28,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 28",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9160),
                            Title = "News Title 28"
                        },
                        new
                        {
                            Id = 29,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 29",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9196),
                            Title = "News Title 29"
                        },
                        new
                        {
                            Id = 30,
                            AdminId = new Guid("cbbaa534-5ddf-46b3-908e-260ed43740ea"),
                            Content = "This is the content of news 30",
                            CreatedAt = new DateTime(2024, 9, 30, 0, 56, 43, 490, DateTimeKind.Local).AddTicks(9228),
                            Title = "News Title 30"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.News", b =>
                {
                    b.HasOne("WeLearnAPI.Models.Domain.Admin", "Admin")
                        .WithMany("News")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("WeLearnAPI.Models.Domain.Admin", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
